@model IEnumerable<ASPNET_MVC_Framework_EntityCRUD_2.Models.Joke>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@{ var searchPhrase = ViewData["searchPhrase"] as string;
    if (!string.IsNullOrEmpty(searchPhrase))
    {
        <h5>Searching for: <b>@searchPhrase</b></h5>
    }
}
<div class="form-group">
    <form>
        <input type="text" placeholder="Enter search phrase" name="searchPhrase" class="input-sm" value="@searchPhrase">
        <button type="submit" class="btn btn-primary" value="Index">Search</button>
        @Html.ActionLink("Reset", "Index", "Jokes", null, new { @class = "btn btn-default" }) <!-- using null because else constructor adds Length parameter sent to controller-->
    </form>
</div>


<p>
    @Html.ActionLink("Create New", "Create") |
    @Html.ActionLink("Create New Async", "CreateCustom")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Question)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Answer)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Question)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Answer)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
