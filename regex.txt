Regex
\d - any digit
. - wildcard aka any symbol (to escape and search for dot use \.)
[abc] - to match only single letter that is in []
[^abc] - to match everywhing else single letter except in [^]
the pattern [0-6] will only match any single digit character from zero to six,
	and nothing else. And likewise, [^n-p] will only match any single character except for letters n to p.
\w metacharacter which is equivalent to the character range [A-Za-z0-9_]
a{3} will match the a character exactly three times
a{1,3} will match the a character no more than 3 times, but no less than once for example.
[abc]+ (one or more of any a, b, or c character) and .* (zero or more of any character).
 a whitespace special character \s will match any of the specific whitespaces 
\b matches the boundary between a word and a non-word character


Lesson Notes
	abc… 	Letters
	123… 	Digits
	\d 	Any Digit
	\D 	Any Non-digit character
	. 	Any Character
	\. 	Period
	[abc] 	Only a, b, or c
	[^abc] 	Not a, b, nor c
	[a-z] 	Characters a to z
	[0-9] 	Numbers 0 to 9
	\w 	Any Alphanumeric character
	\W 	Any Non-alphanumeric character
	{m} 	m Repetitions
	{m,n} 	m to n Repetitions
	* 	Zero or more repetitions
	+ 	One or more repetitions
	? 	Optional character
	\s 	Any Whitespace
	\S 	Any Non-whitespace character
	^…$ 	Starts and ends
	(…) 	Capture Group
	(a(bc)) 	Capture Sub-group
	(.*) 	Capture all
	(abc|def) 	Matches abc or def

https://stackoverflow.com/questions/3075130/what-is-the-difference-between-and-regular-expressions
.*? (non-greedy / lazy) vs .* (greedy) http://www.rexegg.com/regex-quantifiers.html#cheat_sheet
'Greedy' means match longest possible string. 'Lazy' means match shortest possible string.